package jrJava.memorycardgame;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.Rect;


public class MemoryCard {

	private int cardID;
	private int i, j; // row index, column index
	private static int size;
	private Bitmap bitmap, bitmapToShow, bitmapBackSide;
	private boolean toBeRemoved;
	private Paint paint;
	
	
	public MemoryCard(int _cardID, int _i, int _j, int _size){
		cardID = _cardID;
		i = _i;
		j = _j;
		size = _size;
		
		paint = new Paint();
		paint.setAntiAlias(true);
		
		paint.setStyle(Style.STROKE);
		paint.setColor(Color.BLACK);
	}
	
	
	public int getID(){
		return cardID;
	}
	
	
	public void setBitmaps(Bitmap _bitmapToShow, Bitmap _bitmapBackSide){
		bitmapToShow = _bitmapToShow;
		bitmapBackSide = _bitmapBackSide;
		
	}
	
	
	public Bitmap getBitmap(){
		return bitmapToShow;
	}
	
	
	public void show(){
		bitmap = bitmapToShow;
	}
	
	public void hide(){
		bitmap = bitmapBackSide;
	}
	
	public void remove(){
		toBeRemoved = true;
	}
	
	public boolean isRemoved(){
		return toBeRemoved;
	}
	
	
	public boolean respondToFingers(int x, int y){
		if(x>=j*size && x<=(j+1)*size && y>= i*size && y<= (i+1)*size) return true;
		return false;
	}
	

	public void draw(Canvas c){
		if(toBeRemoved) return;
		c.drawRect(j*size+4,  i*size+4, (j+1)*size-4, (i+1)*size-4, paint);
		c.drawBitmap(bitmap, null, new Rect(j*size+7,  i*size+7, (j+1)*size-7, (i+1)*size-7), paint);
	}
}
















